import pygame
import random
import os

FPS=60
WIDTH=500
HEIGHT=600

BLACK=(0,0,0)
GREEN=(0,255,0)
RED=(255,0,0)
YELLOW=(255,255,0)
WHITE=(255,255,255)
 
#遊戲初始化 視窗
pygame.init()
pygame.display.set_caption("迷宮遊戲")
screen=pygame.display.set_mode((WIDTH,HEIGHT))
clock=pygame.time.Clock()


#載入圖片
font_name= pygame.font.match_font('arial')
def draw_text(surf, text, size, x, y):
    font = pygame.font.Font(font_name, size)
    text_surface= font.render(text, True, WHITE)
    text_rect = text_surface.get_rect()
    text_rect.centerx = x
    text_rect.top = y
    surf.blit(text_surface, text_rect)


class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image=pygame.Surface((50,40))
        self.image.fill(GREEN)
        self.rect=self.image.get_rect()
        self.rect.centerx=WIDTH/2
        self.rect.bottom=HEIGHT - 10
        self.speedx=8
    
    def update(self):
        key_pressed=pygame.key.get_pressed()
        if key_pressed[pygame.K_RIGHT]:
            self.rect.x += self.speedx
        if key_pressed[pygame.K_LEFT]:
            self.rect.x -= self.speedx

        if self.rect.right > WIDTH:
            self.rect.right=WIDTH
        if self.rect.left < 0:
            self.rect.left=0
    
    def shoot(self):
        bullet= Bullet(self.rect.centerx, self.rect.top)
        all_sprites.add(bullet)
        bullets.add(bullet)

class Rock(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image=pygame.Surface((30,40))
        self.image.fill(RED)
        self.rect=self.image.get_rect()
        self.radius= self.rect.width / 2
        self.rect.x=random.randrange(0,WIDTH -self.rect.width)
        self.rect.y=random.randrange(-100,40)
        self.speedy=random.randrange(2,10)
        self.speedx=random.randrange(-3,3)
    
    def update(self):
        self.rect.y += self.speedy
        self.rect.x += self.speedx
        if self.rect.top > HEIGHT or self.rect.left > WIDTH or self.rect.right < 0:
            self.rect.x=random.randrange(0,WIDTH -self.rect.width)
            self.rect.y=random.randrange(-100,40)
            self.speedy=random.randrange(2,10)
            self.speedx=random.randrange(-3,3)

class Bullet(pygame.sprite.Sprite): 
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image=pygame.Surface((10,20))
        self.image.fill(YELLOW)
        self.rect=self.image.get_rect()
        self.rect.centerx=x
        self.rect.bottom=y
        self.speedy=-10
     
    def update(self):
        self.rect.y += self.speedy
        if self.rect.bottom < 0:
            self.kill()



all_sprites=pygame.sprite.Group()
rocks=pygame.sprite.Group()
bullets=pygame.sprite.Group()
player=Player()
all_sprites.add(player)
for i in range(8):
    r=Rock()
    all_sprites.add(r)
    rocks.add(r)
score = 0



#遊戲迴圈
running=True
while running:
    clock.tick(FPS)
    #取得輸入
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            running=False  
        elif event.type == pygame.KEYDOWN:
             if event.key == pygame.K_SPACE:
                player.shoot()  
    
    #更新遊戲
    all_sprites.update()
    hits = pygame.sprite.groupcollide(rocks, bullets, True, True)
    for hit in hits:
        score += hit.radius
        r = Rock()
        all_sprites.add(r)
        rocks.add(r)

    hits = pygame.sprite.spritecollide(player, rocks, False)
    if hits:
        running = False

    #畫面顯示
    screen.fill(BLACK)
    all_sprites.draw(screen)
    draw_text(screen, str(score), 18, WIDTH/2, 10)
    pygame.display.update()

pygame.quit()